#This is a Build Deploy Pipeline for .NET 6 Web App to Azure App Service using Azure DevOps Pipeline

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  dotNetVersion: '6.0.x'
  targetRuntime: 'linux-x64'
  azureSPNName: 'minimalapi-dotnet6' #get it from your AzureDevOps portal
  azureAppServiceName: 'minimalapi-dotnet6' #get it from your Azure portal

# Build the app for .NET 6 framework
steps:
- task: UseDotNet@2
  displayName: 'Build .NET 6 Application'
  inputs:
    version: $(dotNetVersion)
    includePreviewVersions: true
- script: dotnet build --configuration $(buildConfiguration) 
  
- task: DotNetCoreCLI@2
  displayName: 'Test .NET 6 Application'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration)'

# Publish it as .NET 6 self-contained application for linux runtime
- task: DotNetCoreCLI@2
  displayName: 'Publish .NET 6 Application'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# Copy dockerfile to directory
- task: CopyFiles@2
  displayName: 'Copy Dockerfile to Stagin Directory'
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'Dockerfile'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

# Package the file and uploads them as an artifact of the build
- task: PublishPipelineArtifact@1
  displayName: 'Publish Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'MinimalAPI'

